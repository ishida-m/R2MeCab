## Use the R_HOME indirection to support installations of multiple R version

# On Linux/Solaris we use pkg-config
#ICU_CFLAGS=`pkg-config --cflags icu-i18n`
# ICU_LIBS=`pkg-config --libs icu-i18n`



#PKG_CPPFLAGS=`pkg-config --cflags icu-i18n`
#PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` -lmecab `pkg-config --libs icu-i18n`
#// Sys.setenv("PKG_LIBS"='`icu-config --ldflags` -L/usr/lib/x86_64-linux-gnu/icu')
#// Sys.setenv("PKG_CXXFLAGS"='`icu-config --cppflags` -I/usr/include/x86_64-linux-gnu/unicode')

PKG_LIBS=`icu-config --ldflags` -L/usr/lib/x86_64-linux-gnu/icu -lmecab
PKG_CXXFLAGS=`icu-config --cppflags` -I/usr/include/x86_64-linux-gnu/unicode

## As an alternative, one can also add this code in a file 'configure'
##
##    PKG_LIBS=`${R_HOME}/bin/Rscript -e "Rcpp:::LdFlags()"`
## 
##    sed -e "s|@PKG_LIBS@|${PKG_LIBS}|" \
##        src/Makevars.in > src/Makevars
## 
## which together with the following file 'src/Makevars.in'
##
##    PKG_LIBS = @PKG_LIBS@
##
## can be used to create src/Makevars dynamically. This scheme is more
## powerful and can be expanded to also check for and link with other
## libraries.  It should be complemented by a file 'cleanup'
##
##    rm src/Makevars
##
## which removes the autogenerated file src/Makevars. 
##
## Of course, autoconf can also be used to write configure files. This is
## done by a number of packages, but recommended only for more advanced users
## comfortable with autoconf and its related tools.


